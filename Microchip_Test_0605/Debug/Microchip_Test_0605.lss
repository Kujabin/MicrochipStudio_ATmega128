
Microchip_Test_0605.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a2  00800100  00000a62  00000af6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a62  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000101  008001a2  008001a2  00000b98  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000b98  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000bf4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  00000c34  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001232  00000000  00000000  00000d1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a9b  00000000  00000000  00001f4e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000947  00000000  00000000  000029e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000027c  00000000  00000000  00003330  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000776  00000000  00000000  000035ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000956  00000000  00000000  00003d22  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00004678  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	25 c1       	rjmp	.+586    	; 0x27c <__vector_12>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	e6 c1       	rjmp	.+972    	; 0x416 <__vector_18>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	d8 c1       	rjmp	.+944    	; 0x42a <__vector_30>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 e6       	ldi	r30, 0x62	; 98
  a0:	fa e0       	ldi	r31, 0x0A	; 10
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 3a       	cpi	r26, 0xA2	; 162
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	22 e0       	ldi	r18, 0x02	; 2
  b4:	a2 ea       	ldi	r26, 0xA2	; 162
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a3 3a       	cpi	r26, 0xA3	; 163
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	f9 d0       	rcall	.+498    	; 0x2b6 <main>
  c4:	cc c4       	rjmp	.+2456   	; 0xa5e <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <Timer1_init_1s>:
		if (*p == '\n') {
			Tx1Data('\r');  // 줄바꿈을 위해 CR 추가
		}
		Tx1Data(*p);
	}
}
  c8:	8e b5       	in	r24, 0x2e	; 46
  ca:	88 60       	ori	r24, 0x08	; 8
  cc:	8e bd       	out	0x2e, r24	; 46
  ce:	8f e3       	ldi	r24, 0x3F	; 63
  d0:	98 e3       	ldi	r25, 0x38	; 56
  d2:	9b bd       	out	0x2b, r25	; 43
  d4:	8a bd       	out	0x2a, r24	; 42
  d6:	87 b7       	in	r24, 0x37	; 55
  d8:	80 61       	ori	r24, 0x10	; 16
  da:	87 bf       	out	0x37, r24	; 55
  dc:	8e b5       	in	r24, 0x2e	; 46
  de:	85 60       	ori	r24, 0x05	; 5
  e0:	8e bd       	out	0x2e, r24	; 46
  e2:	08 95       	ret

000000e4 <pinMode>:
  e4:	88 30       	cpi	r24, 0x08	; 8
  e6:	78 f0       	brcs	.+30     	; 0x106 <pinMode+0x22>
  e8:	28 ef       	ldi	r18, 0xF8	; 248
  ea:	28 0f       	add	r18, r24
  ec:	28 30       	cpi	r18, 0x08	; 8
  ee:	78 f0       	brcs	.+30     	; 0x10e <pinMode+0x2a>
  f0:	20 ef       	ldi	r18, 0xF0	; 240
  f2:	28 0f       	add	r18, r24
  f4:	28 30       	cpi	r18, 0x08	; 8
  f6:	70 f0       	brcs	.+28     	; 0x114 <pinMode+0x30>
  f8:	28 ee       	ldi	r18, 0xE8	; 232
  fa:	28 0f       	add	r18, r24
  fc:	28 30       	cpi	r18, 0x08	; 8
  fe:	20 f5       	brcc	.+72     	; 0x148 <pinMode+0x64>
 100:	e1 e3       	ldi	r30, 0x31	; 49
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	09 c0       	rjmp	.+18     	; 0x118 <pinMode+0x34>
 106:	28 2f       	mov	r18, r24
 108:	ea e3       	ldi	r30, 0x3A	; 58
 10a:	f0 e0       	ldi	r31, 0x00	; 0
 10c:	05 c0       	rjmp	.+10     	; 0x118 <pinMode+0x34>
 10e:	e7 e3       	ldi	r30, 0x37	; 55
 110:	f0 e0       	ldi	r31, 0x00	; 0
 112:	02 c0       	rjmp	.+4      	; 0x118 <pinMode+0x34>
 114:	e4 e3       	ldi	r30, 0x34	; 52
 116:	f0 e0       	ldi	r31, 0x00	; 0
 118:	66 23       	and	r22, r22
 11a:	59 f0       	breq	.+22     	; 0x132 <pinMode+0x4e>
 11c:	30 81       	ld	r19, Z
 11e:	81 e0       	ldi	r24, 0x01	; 1
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	02 c0       	rjmp	.+4      	; 0x128 <pinMode+0x44>
 124:	88 0f       	add	r24, r24
 126:	99 1f       	adc	r25, r25
 128:	2a 95       	dec	r18
 12a:	e2 f7       	brpl	.-8      	; 0x124 <pinMode+0x40>
 12c:	83 2b       	or	r24, r19
 12e:	80 83       	st	Z, r24
 130:	08 95       	ret
 132:	30 81       	ld	r19, Z
 134:	81 e0       	ldi	r24, 0x01	; 1
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	02 c0       	rjmp	.+4      	; 0x13e <pinMode+0x5a>
 13a:	88 0f       	add	r24, r24
 13c:	99 1f       	adc	r25, r25
 13e:	2a 95       	dec	r18
 140:	e2 f7       	brpl	.-8      	; 0x13a <pinMode+0x56>
 142:	80 95       	com	r24
 144:	83 23       	and	r24, r19
 146:	80 83       	st	Z, r24
 148:	08 95       	ret

0000014a <digitalWrite>:
 14a:	88 30       	cpi	r24, 0x08	; 8
 14c:	78 f0       	brcs	.+30     	; 0x16c <digitalWrite+0x22>
 14e:	28 ef       	ldi	r18, 0xF8	; 248
 150:	28 0f       	add	r18, r24
 152:	28 30       	cpi	r18, 0x08	; 8
 154:	78 f0       	brcs	.+30     	; 0x174 <digitalWrite+0x2a>
 156:	20 ef       	ldi	r18, 0xF0	; 240
 158:	28 0f       	add	r18, r24
 15a:	28 30       	cpi	r18, 0x08	; 8
 15c:	70 f0       	brcs	.+28     	; 0x17a <digitalWrite+0x30>
 15e:	28 ee       	ldi	r18, 0xE8	; 232
 160:	28 0f       	add	r18, r24
 162:	28 30       	cpi	r18, 0x08	; 8
 164:	20 f5       	brcc	.+72     	; 0x1ae <digitalWrite+0x64>
 166:	e2 e3       	ldi	r30, 0x32	; 50
 168:	f0 e0       	ldi	r31, 0x00	; 0
 16a:	09 c0       	rjmp	.+18     	; 0x17e <digitalWrite+0x34>
 16c:	28 2f       	mov	r18, r24
 16e:	eb e3       	ldi	r30, 0x3B	; 59
 170:	f0 e0       	ldi	r31, 0x00	; 0
 172:	05 c0       	rjmp	.+10     	; 0x17e <digitalWrite+0x34>
 174:	e8 e3       	ldi	r30, 0x38	; 56
 176:	f0 e0       	ldi	r31, 0x00	; 0
 178:	02 c0       	rjmp	.+4      	; 0x17e <digitalWrite+0x34>
 17a:	e5 e3       	ldi	r30, 0x35	; 53
 17c:	f0 e0       	ldi	r31, 0x00	; 0
 17e:	66 23       	and	r22, r22
 180:	59 f0       	breq	.+22     	; 0x198 <digitalWrite+0x4e>
 182:	30 81       	ld	r19, Z
 184:	81 e0       	ldi	r24, 0x01	; 1
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	02 c0       	rjmp	.+4      	; 0x18e <digitalWrite+0x44>
 18a:	88 0f       	add	r24, r24
 18c:	99 1f       	adc	r25, r25
 18e:	2a 95       	dec	r18
 190:	e2 f7       	brpl	.-8      	; 0x18a <digitalWrite+0x40>
 192:	83 2b       	or	r24, r19
 194:	80 83       	st	Z, r24
 196:	08 95       	ret
 198:	30 81       	ld	r19, Z
 19a:	81 e0       	ldi	r24, 0x01	; 1
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	02 c0       	rjmp	.+4      	; 0x1a4 <digitalWrite+0x5a>
 1a0:	88 0f       	add	r24, r24
 1a2:	99 1f       	adc	r25, r25
 1a4:	2a 95       	dec	r18
 1a6:	e2 f7       	brpl	.-8      	; 0x1a0 <digitalWrite+0x56>
 1a8:	80 95       	com	r24
 1aa:	83 23       	and	r24, r19
 1ac:	80 83       	st	Z, r24
 1ae:	08 95       	ret

000001b0 <RS485_tx_mode>:
 1b0:	88 b3       	in	r24, 0x18	; 24
 1b2:	80 61       	ori	r24, 0x10	; 16
 1b4:	88 bb       	out	0x18, r24	; 24
 1b6:	86 e6       	ldi	r24, 0x66	; 102
 1b8:	9e e0       	ldi	r25, 0x0E	; 14
 1ba:	01 97       	sbiw	r24, 0x01	; 1
 1bc:	f1 f7       	brne	.-4      	; 0x1ba <RS485_tx_mode+0xa>
 1be:	00 00       	nop
 1c0:	08 95       	ret

000001c2 <RS485_rx_mode>:
 1c2:	8c ec       	ldi	r24, 0xCC	; 204
 1c4:	9c e1       	ldi	r25, 0x1C	; 28
 1c6:	01 97       	sbiw	r24, 0x01	; 1
 1c8:	f1 f7       	brne	.-4      	; 0x1c6 <RS485_rx_mode+0x4>
 1ca:	00 c0       	rjmp	.+0      	; 0x1cc <RS485_rx_mode+0xa>
 1cc:	00 00       	nop
 1ce:	88 b3       	in	r24, 0x18	; 24
 1d0:	8f 7e       	andi	r24, 0xEF	; 239
 1d2:	88 bb       	out	0x18, r24	; 24
 1d4:	08 95       	ret

000001d6 <Tx1Data>:
 1d6:	90 91 9b 00 	lds	r25, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
 1da:	95 ff       	sbrs	r25, 5
 1dc:	fc cf       	rjmp	.-8      	; 0x1d6 <Tx1Data>
 1de:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
 1e2:	08 95       	ret

000001e4 <Tx1Println>:

void Tx1Println(const char* format, ...) {
 1e4:	0f 93       	push	r16
 1e6:	1f 93       	push	r17
 1e8:	cf 93       	push	r28
 1ea:	df 93       	push	r29
 1ec:	cd b7       	in	r28, 0x3d	; 61
 1ee:	de b7       	in	r29, 0x3e	; 62
 1f0:	c0 58       	subi	r28, 0x80	; 128
 1f2:	d1 09       	sbc	r29, r1
 1f4:	0f b6       	in	r0, 0x3f	; 63
 1f6:	f8 94       	cli
 1f8:	de bf       	out	0x3e, r29	; 62
 1fa:	0f be       	out	0x3f, r0	; 63
 1fc:	cd bf       	out	0x3d, r28	; 61
 1fe:	9e 01       	movw	r18, r28
 200:	29 57       	subi	r18, 0x79	; 121
 202:	3f 4f       	sbci	r19, 0xFF	; 255
 204:	f9 01       	movw	r30, r18
 206:	41 91       	ld	r20, Z+
 208:	51 91       	ld	r21, Z+
 20a:	9f 01       	movw	r18, r30
	char buffer[128];
	va_list args;
	va_start(args, format);
	vsnprintf(buffer, sizeof(buffer), format, args);
 20c:	60 e8       	ldi	r22, 0x80	; 128
 20e:	70 e0       	ldi	r23, 0x00	; 0
 210:	ce 01       	movw	r24, r28
 212:	01 96       	adiw	r24, 0x01	; 1
 214:	3f d1       	rcall	.+638    	; 0x494 <vsnprintf>
	va_end(args);

	for (char* p = buffer; *p; p++) {
 216:	8e 01       	movw	r16, r28
 218:	0f 5f       	subi	r16, 0xFF	; 255
 21a:	1f 4f       	sbci	r17, 0xFF	; 255
 21c:	08 c0       	rjmp	.+16     	; 0x22e <Tx1Println+0x4a>
		if (*p == '\n') {
 21e:	8a 30       	cpi	r24, 0x0A	; 10
 220:	11 f4       	brne	.+4      	; 0x226 <Tx1Println+0x42>
			Tx1Data('\r');
 222:	8d e0       	ldi	r24, 0x0D	; 13
 224:	d8 df       	rcall	.-80     	; 0x1d6 <Tx1Data>
		}
		Tx1Data(*p);
 226:	f8 01       	movw	r30, r16
 228:	81 91       	ld	r24, Z+
 22a:	8f 01       	movw	r16, r30
 22c:	d4 df       	rcall	.-88     	; 0x1d6 <Tx1Data>
	va_list args;
	va_start(args, format);
	vsnprintf(buffer, sizeof(buffer), format, args);
	va_end(args);

	for (char* p = buffer; *p; p++) {
 22e:	f8 01       	movw	r30, r16
 230:	80 81       	ld	r24, Z
 232:	81 11       	cpse	r24, r1
			Tx1Data('\r');
		}
		Tx1Data(*p);
	}
	// 줄바꿈 추가
	Tx1Data('\r');
 234:	f4 cf       	rjmp	.-24     	; 0x21e <Tx1Println+0x3a>
 236:	8d e0       	ldi	r24, 0x0D	; 13
	Tx1Data('\n');
 238:	ce df       	rcall	.-100    	; 0x1d6 <Tx1Data>
 23a:	8a e0       	ldi	r24, 0x0A	; 10
 23c:	cc df       	rcall	.-104    	; 0x1d6 <Tx1Data>
}
 23e:	c0 58       	subi	r28, 0x80	; 128
 240:	df 4f       	sbci	r29, 0xFF	; 255
 242:	0f b6       	in	r0, 0x3f	; 63
 244:	f8 94       	cli
 246:	de bf       	out	0x3e, r29	; 62
 248:	0f be       	out	0x3f, r0	; 63
 24a:	cd bf       	out	0x3d, r28	; 61
 24c:	df 91       	pop	r29
 24e:	cf 91       	pop	r28
 250:	1f 91       	pop	r17
 252:	0f 91       	pop	r16
 254:	08 95       	ret

00000256 <Ver_check>:
// 	Tx1Data('0'+((Prog_Ver%1000)/100));
// 	Tx1Data('0'+((Prog_Ver%100)/10));
// 	Tx1Data('0'+(Prog_Ver%10));
// 	Tx1Data(0x0A);
// 	Tx1Data(0x0D);
	Tx1Println("Prog Ver: %06ld", Prog_Ver);
 256:	1f 92       	push	r1
 258:	83 e0       	ldi	r24, 0x03	; 3
 25a:	8f 93       	push	r24
 25c:	82 ed       	ldi	r24, 0xD2	; 210
 25e:	8f 93       	push	r24
 260:	8f ef       	ldi	r24, 0xFF	; 255
 262:	8f 93       	push	r24
 264:	80 e0       	ldi	r24, 0x00	; 0
 266:	91 e0       	ldi	r25, 0x01	; 1
 268:	9f 93       	push	r25
 26a:	8f 93       	push	r24
 26c:	bb df       	rcall	.-138    	; 0x1e4 <Tx1Println>
}
 26e:	0f 90       	pop	r0
 270:	0f 90       	pop	r0
 272:	0f 90       	pop	r0
 274:	0f 90       	pop	r0
 276:	0f 90       	pop	r0
 278:	0f 90       	pop	r0
 27a:	08 95       	ret

0000027c <__vector_12>:

	//Tx1Data(Data1); // 수신된 걸 다시 전송 (에코)
}
*/

ISR(TIMER1_COMPA_INTERRUPT) {		//1s timer interrupt
 27c:	1f 92       	push	r1
 27e:	0f 92       	push	r0
 280:	0f b6       	in	r0, 0x3f	; 63
 282:	0f 92       	push	r0
 284:	11 24       	eor	r1, r1
 286:	8f 93       	push	r24
 288:	9f 93       	push	r25
	Timer_485++;
 28a:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <__data_end>
 28e:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <__data_end+0x1>
 292:	01 96       	adiw	r24, 0x01	; 1
 294:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <__data_end+0x1>
 298:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <__data_end>
	led_flag ^= 1;  // 0 → 1 → 0 → 1 토글
 29c:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <led_flag>
 2a0:	81 e0       	ldi	r24, 0x01	; 1
 2a2:	89 27       	eor	r24, r25
 2a4:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <led_flag>
	//Tx1Data(led_flag+0x30);	//test
}
 2a8:	9f 91       	pop	r25
 2aa:	8f 91       	pop	r24
 2ac:	0f 90       	pop	r0
 2ae:	0f be       	out	0x3f, r0	; 63
 2b0:	0f 90       	pop	r0
 2b2:	1f 90       	pop	r1
 2b4:	18 95       	reti

000002b6 <main>:
	#ifdef change_Rx_Tx_mode
	int i = 0;
	char mode = 0;
	#endif
	
	pinMode(PIN_PD4, 1);	//led
 2b6:	61 e0       	ldi	r22, 0x01	; 1
 2b8:	8c e1       	ldi	r24, 0x1C	; 28
 2ba:	14 df       	rcall	.-472    	; 0xe4 <pinMode>
	
 	DDRB = 0xFF;
 2bc:	8f ef       	ldi	r24, 0xFF	; 255
	
	Timer1_init_1s();
 2be:	87 bb       	out	0x17, r24	; 23
	USART0_init();
 2c0:	03 df       	rcall	.-506    	; 0xc8 <Timer1_init_1s>
 2c2:	8e d0       	rcall	.+284    	; 0x3e0 <USART0_init>
	USART1_init();
 2c4:	99 d0       	rcall	.+306    	; 0x3f8 <USART1_init>
 2c6:	78 94       	sei
	sei();  // 전역 인터럽트 활성화
 2c8:	2f ef       	ldi	r18, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2ca:	8f ef       	ldi	r24, 0xFF	; 255
 2cc:	9c e2       	ldi	r25, 0x2C	; 44
 2ce:	21 50       	subi	r18, 0x01	; 1
 2d0:	80 40       	sbci	r24, 0x00	; 0
 2d2:	90 40       	sbci	r25, 0x00	; 0
 2d4:	e1 f7       	brne	.-8      	; 0x2ce <main+0x18>
 2d6:	00 c0       	rjmp	.+0      	; 0x2d8 <main+0x22>
	_delay_ms(1000);	//업데이트 및 보드 전원 재 인가 시, 3번씩 main문 동작
	RS485_tx_mode();
 2d8:	00 00       	nop
	
	Ver_check();
 2da:	6a df       	rcall	.-300    	; 0x1b0 <RS485_tx_mode>
 2dc:	bc df       	rcall	.-136    	; 0x256 <Ver_check>
	
	digitalWrite(PIN_PD4, 1);	//led off
 2de:	61 e0       	ldi	r22, 0x01	; 1
 2e0:	8c e1       	ldi	r24, 0x1C	; 28
 2e2:	33 df       	rcall	.-410    	; 0x14a <digitalWrite>
 2e4:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <__data_end+0x1>
	
	Timer_485 = 0;
 2e8:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <__data_end>
	Tx1Println("Select the mode you want");
 2ec:	80 e1       	ldi	r24, 0x10	; 16
 2ee:	91 e0       	ldi	r25, 0x01	; 1
 2f0:	9f 93       	push	r25
 2f2:	8f 93       	push	r24
 2f4:	77 df       	rcall	.-274    	; 0x1e4 <Tx1Println>
	Tx1Println("0x31:Tx / 0x32:Rx");
 2f6:	89 e2       	ldi	r24, 0x29	; 41
 2f8:	91 e0       	ldi	r25, 0x01	; 1
 2fa:	9f 93       	push	r25
 2fc:	8f 93       	push	r24
 2fe:	72 df       	rcall	.-284    	; 0x1e4 <Tx1Println>
	Tx1Println("ex) [F2] [1] [2] [F3]");
 300:	8b e3       	ldi	r24, 0x3B	; 59
 302:	91 e0       	ldi	r25, 0x01	; 1
 304:	9f 93       	push	r25
 306:	8f 93       	push	r24
 308:	6d df       	rcall	.-294    	; 0x1e4 <Tx1Println>
	Tx1Println("=====================");
 30a:	81 e5       	ldi	r24, 0x51	; 81
 30c:	91 e0       	ldi	r25, 0x01	; 1
 30e:	9f 93       	push	r25
 310:	8f 93       	push	r24
 312:	68 df       	rcall	.-304    	; 0x1e4 <Tx1Println>
 314:	8d b7       	in	r24, 0x3d	; 61
 316:	9e b7       	in	r25, 0x3e	; 62
 318:	08 96       	adiw	r24, 0x08	; 8
 31a:	0f b6       	in	r0, 0x3f	; 63
 31c:	f8 94       	cli
 31e:	9e bf       	out	0x3e, r25	; 62
 320:	0f be       	out	0x3f, r0	; 63
 322:	8d bf       	out	0x3d, r24	; 61

int main(void)
{
	#ifdef change_Rx_Tx_mode
	int i = 0;
	char mode = 0;
 324:	c0 e0       	ldi	r28, 0x00	; 0
	Tx1Println("ex) [F2] [1] [2] [F3]");
	Tx1Println("=====================");
	while (1)
	{
		#ifdef change_Rx_Tx_mode
		RS485_rx_mode();
 326:	4d df       	rcall	.-358    	; 0x1c2 <RS485_rx_mode>
 328:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <RxBuf1>
		if(RxBuf1[0] == STX && RxBuf1[RxNum1-1] == ETX)
 32c:	82 3f       	cpi	r24, 0xF2	; 242
 32e:	09 f0       	breq	.+2      	; 0x332 <main+0x7c>
 330:	46 c0       	rjmp	.+140    	; 0x3be <main+0x108>
 332:	e0 91 a7 01 	lds	r30, 0x01A7	; 0x8001a7 <RxNum1>
 336:	f0 e0       	ldi	r31, 0x00	; 0
 338:	e8 55       	subi	r30, 0x58	; 88
 33a:	fe 4f       	sbci	r31, 0xFE	; 254
 33c:	80 81       	ld	r24, Z
 33e:	83 3f       	cpi	r24, 0xF3	; 243
 340:	09 f0       	breq	.+2      	; 0x344 <main+0x8e>
 342:	3d c0       	rjmp	.+122    	; 0x3be <main+0x108>
		{
			if(RxBuf1[1] == '1')
 344:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <RxBuf1+0x1>
 348:	81 33       	cpi	r24, 0x31	; 49
 34a:	71 f4       	brne	.+28     	; 0x368 <main+0xb2>
			{
				if(mode != Tx)
 34c:	c1 30       	cpi	r28, 0x01	; 1
 34e:	49 f0       	breq	.+18     	; 0x362 <main+0xac>
				{
					RS485_tx_mode();
 350:	2f df       	rcall	.-418    	; 0x1b0 <RS485_tx_mode>
 352:	87 e6       	ldi	r24, 0x67	; 103
					Tx1Println("Select Tx mode");
 354:	91 e0       	ldi	r25, 0x01	; 1
 356:	9f 93       	push	r25
 358:	8f 93       	push	r24
 35a:	44 df       	rcall	.-376    	; 0x1e4 <Tx1Println>
 35c:	0f 90       	pop	r0
 35e:	0f 90       	pop	r0
 360:	c1 e0       	ldi	r28, 0x01	; 1
					mode = Tx;
 362:	10 92 a7 01 	sts	0x01A7, r1	; 0x8001a7 <RxNum1>
				}
				RxNum1 = 0;
 366:	2b c0       	rjmp	.+86     	; 0x3be <main+0x108>
 368:	82 33       	cpi	r24, 0x32	; 50
			}
			else if(RxBuf1[1] == '2')
 36a:	49 f5       	brne	.+82     	; 0x3be <main+0x108>
 36c:	c2 30       	cpi	r28, 0x02	; 2
			{
				if(mode != Rx)
 36e:	41 f0       	breq	.+16     	; 0x380 <main+0xca>
				{
					RS485_tx_mode();
 370:	1f df       	rcall	.-450    	; 0x1b0 <RS485_tx_mode>
 372:	86 e7       	ldi	r24, 0x76	; 118
					Tx1Println("Select Rx mode");
 374:	91 e0       	ldi	r25, 0x01	; 1
 376:	9f 93       	push	r25
 378:	8f 93       	push	r24
 37a:	34 df       	rcall	.-408    	; 0x1e4 <Tx1Println>
 37c:	0f 90       	pop	r0
 37e:	0f 90       	pop	r0
 380:	c0 91 ab 01 	lds	r28, 0x01AB	; 0x8001ab <RxBuf1+0x2>
				}
				i = RxBuf1[2];
 384:	0c 2f       	mov	r16, r28
 386:	10 e0       	ldi	r17, 0x00	; 0
 388:	13 df       	rcall	.-474    	; 0x1b0 <RS485_tx_mode>
				RS485_tx_mode();
 38a:	03 3f       	cpi	r16, 0xF3	; 243
 38c:	11 05       	cpc	r17, r1
				
				if (i == 0xF3) {
 38e:	41 f4       	brne	.+16     	; 0x3a0 <main+0xea>
 390:	85 e8       	ldi	r24, 0x85	; 133
					Tx1Println("illegal data");
 392:	91 e0       	ldi	r25, 0x01	; 1
 394:	9f 93       	push	r25
 396:	8f 93       	push	r24
 398:	25 df       	rcall	.-438    	; 0x1e4 <Tx1Println>
 39a:	0f 90       	pop	r0
 39c:	0f 90       	pop	r0
 39e:	0b c0       	rjmp	.+22     	; 0x3b6 <main+0x100>
 3a0:	1f 92       	push	r1
				}
				else
				{
					Tx1Println("RxBuf1[2] is %X",i);
 3a2:	cf 93       	push	r28
 3a4:	82 e9       	ldi	r24, 0x92	; 146
 3a6:	91 e0       	ldi	r25, 0x01	; 1
 3a8:	9f 93       	push	r25
 3aa:	8f 93       	push	r24
 3ac:	1b df       	rcall	.-458    	; 0x1e4 <Tx1Println>
 3ae:	0f 90       	pop	r0
 3b0:	0f 90       	pop	r0
 3b2:	0f 90       	pop	r0
 3b4:	0f 90       	pop	r0
 3b6:	05 df       	rcall	.-502    	; 0x1c2 <RS485_rx_mode>
				}
				RS485_rx_mode();
 3b8:	10 92 a7 01 	sts	0x01A7, r1	; 0x8001a7 <RxNum1>
				mode = Rx;
				RxNum1 = 0;
 3bc:	c2 e0       	ldi	r28, 0x02	; 2
				else
				{
					Tx1Println("RxBuf1[2] is %X",i);
				}
				RS485_rx_mode();
				mode = Rx;
 3be:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <led_flag>
			Timer_485 = 0;
		}
		#endif

		#ifdef led_toggle_test
		if(led_flag == 0)
 3c2:	81 11       	cpse	r24, r1
 3c4:	04 c0       	rjmp	.+8      	; 0x3ce <main+0x118>
 3c6:	60 e0       	ldi	r22, 0x00	; 0
		{
			digitalWrite(PIN_PD4, 0);  //PORTD = 0xEF;	//led on
 3c8:	8c e1       	ldi	r24, 0x1C	; 28
 3ca:	bf de       	rcall	.-642    	; 0x14a <digitalWrite>
 3cc:	ac cf       	rjmp	.-168    	; 0x326 <main+0x70>
 3ce:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <led_flag>
		}
		else if(led_flag == 1)
 3d2:	81 30       	cpi	r24, 0x01	; 1
 3d4:	09 f0       	breq	.+2      	; 0x3d8 <main+0x122>
 3d6:	a7 cf       	rjmp	.-178    	; 0x326 <main+0x70>
 3d8:	61 e0       	ldi	r22, 0x01	; 1
 3da:	8c e1       	ldi	r24, 0x1C	; 28
		{
			digitalWrite(PIN_PD4, 1);  //PORTD = 0xFF;	//led off
 3dc:	b6 de       	rcall	.-660    	; 0x14a <digitalWrite>
 3de:	a3 cf       	rjmp	.-186    	; 0x326 <main+0x70>

000003e0 <USART0_init>:
unsigned char RxBuf1[UART1_MAXBUF], Data1, RxNum1;
int Rx_data_trans = 0;


void USART0_init(void) {
	UBRR0H = 0;
 3e0:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L = 191; //191 = 0xBF // 9600bps @ 14.7456MHz with U2X
 3e4:	8f eb       	ldi	r24, 0xBF	; 191
 3e6:	89 b9       	out	0x09, r24	; 9
	UCSR0A = (1 << U2X0); // 2배속 모드
 3e8:	82 e0       	ldi	r24, 0x02	; 2
 3ea:	8b b9       	out	0x0b, r24	; 11
	UCSR0B = (1 << RXEN0) | (1 << TXEN0) | (1 << RXCIE0); // 송수신 + 인터럽트
 3ec:	88 e9       	ldi	r24, 0x98	; 152
 3ee:	8a b9       	out	0x0a, r24	; 10
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00); // 8-bit
 3f0:	86 e0       	ldi	r24, 0x06	; 6
 3f2:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
 3f6:	08 95       	ret

000003f8 <USART1_init>:
}

void USART1_init(void) {
	UBRR1H = 0;
 3f8:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
	UBRR1L = 0xBF;	//191 = 0xBF //14745600Hz with U2X
 3fc:	8f eb       	ldi	r24, 0xBF	; 191
 3fe:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>

	UCSR1A=0x02;	//2배속 비동기 통신 모드	//115200이상의
 402:	82 e0       	ldi	r24, 0x02	; 2
 404:	80 93 9b 00 	sts	0x009B, r24	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
	UCSR1B = (1 << RXEN1) | (1 << TXEN1) | (1 << RXCIE1);  // 수신, 송신, 수신 인터럽트 허용
 408:	88 e9       	ldi	r24, 0x98	; 152
 40a:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
	UCSR1C = (1 << UCSZ11) | (1 << UCSZ10);  // 8-bit 데이터, 비패리티, 1 스탑비트
 40e:	86 e0       	ldi	r24, 0x06	; 6
 410:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <__TEXT_REGION_LENGTH__+0x7e009d>
 414:	08 95       	ret

00000416 <__vector_18>:
}

// USART0 수신 인터럽트
ISR(USART0_RX_vect) {
 416:	1f 92       	push	r1
 418:	0f 92       	push	r0
 41a:	0f b6       	in	r0, 0x3f	; 63
 41c:	0f 92       	push	r0
 41e:	11 24       	eor	r1, r1
			RxNum0 = 0;
		}
	}
	*/
	//Tx0Data(data); // 수신된 걸 다시 전송 (에코)
}
 420:	0f 90       	pop	r0
 422:	0f be       	out	0x3f, r0	; 63
 424:	0f 90       	pop	r0
 426:	1f 90       	pop	r1
 428:	18 95       	reti

0000042a <__vector_30>:

// USART1 수신 인터럽트
ISR(USART1_RX_vect) {
 42a:	1f 92       	push	r1
 42c:	0f 92       	push	r0
 42e:	0f b6       	in	r0, 0x3f	; 63
 430:	0f 92       	push	r0
 432:	11 24       	eor	r1, r1
 434:	0b b6       	in	r0, 0x3b	; 59
 436:	0f 92       	push	r0
 438:	8f 93       	push	r24
 43a:	9f 93       	push	r25
 43c:	ef 93       	push	r30
 43e:	ff 93       	push	r31
	//int Rx_data = 5;
	int Rx_data = RxBuf1[1];
 440:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <RxBuf1+0x1>
 444:	90 e0       	ldi	r25, 0x00	; 0
	Rx_data_trans = Rx_data;
 446:	90 93 a6 01 	sts	0x01A6, r25	; 0x8001a6 <Rx_data_trans+0x1>
 44a:	80 93 a5 01 	sts	0x01A5, r24	; 0x8001a5 <Rx_data_trans>
	char Data1 = UDR1;
 44e:	90 91 9c 00 	lds	r25, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
	if(Data1 == STX) RxNum1 = 0;
 452:	92 3f       	cpi	r25, 0xF2	; 242
 454:	11 f4       	brne	.+4      	; 0x45a <__vector_30+0x30>
 456:	10 92 a7 01 	sts	0x01A7, r1	; 0x8001a7 <RxNum1>
	RxBuf1[RxNum1++] = Data1;
 45a:	e0 91 a7 01 	lds	r30, 0x01A7	; 0x8001a7 <RxNum1>
 45e:	81 e0       	ldi	r24, 0x01	; 1
 460:	8e 0f       	add	r24, r30
 462:	80 93 a7 01 	sts	0x01A7, r24	; 0x8001a7 <RxNum1>
 466:	f0 e0       	ldi	r31, 0x00	; 0
 468:	e7 55       	subi	r30, 0x57	; 87
 46a:	fe 4f       	sbci	r31, 0xFE	; 254
 46c:	90 83       	st	Z, r25
	if (RxNum1 >= UART1_MAXBUF) RxNum1 = 0;
 46e:	8a 3f       	cpi	r24, 0xFA	; 250
 470:	10 f0       	brcs	.+4      	; 0x476 <__vector_30+0x4c>
 472:	10 92 a7 01 	sts	0x01A7, r1	; 0x8001a7 <RxNum1>
	
	PORTD ^= ( 1 << PORTD4 );
 476:	92 b3       	in	r25, 0x12	; 18
 478:	80 e1       	ldi	r24, 0x10	; 16
 47a:	89 27       	eor	r24, r25
 47c:	82 bb       	out	0x12, r24	; 18

	//Tx1Data(Data1); // 수신된 걸 다시 전송 (에코)
}
 47e:	ff 91       	pop	r31
 480:	ef 91       	pop	r30
 482:	9f 91       	pop	r25
 484:	8f 91       	pop	r24
 486:	0f 90       	pop	r0
 488:	0b be       	out	0x3b, r0	; 59
 48a:	0f 90       	pop	r0
 48c:	0f be       	out	0x3f, r0	; 63
 48e:	0f 90       	pop	r0
 490:	1f 90       	pop	r1
 492:	18 95       	reti

00000494 <vsnprintf>:
 494:	0f 93       	push	r16
 496:	1f 93       	push	r17
 498:	cf 93       	push	r28
 49a:	df 93       	push	r29
 49c:	cd b7       	in	r28, 0x3d	; 61
 49e:	de b7       	in	r29, 0x3e	; 62
 4a0:	2e 97       	sbiw	r28, 0x0e	; 14
 4a2:	0f b6       	in	r0, 0x3f	; 63
 4a4:	f8 94       	cli
 4a6:	de bf       	out	0x3e, r29	; 62
 4a8:	0f be       	out	0x3f, r0	; 63
 4aa:	cd bf       	out	0x3d, r28	; 61
 4ac:	8c 01       	movw	r16, r24
 4ae:	fa 01       	movw	r30, r20
 4b0:	86 e0       	ldi	r24, 0x06	; 6
 4b2:	8c 83       	std	Y+4, r24	; 0x04
 4b4:	1a 83       	std	Y+2, r17	; 0x02
 4b6:	09 83       	std	Y+1, r16	; 0x01
 4b8:	77 ff       	sbrs	r23, 7
 4ba:	02 c0       	rjmp	.+4      	; 0x4c0 <vsnprintf+0x2c>
 4bc:	60 e0       	ldi	r22, 0x00	; 0
 4be:	70 e8       	ldi	r23, 0x80	; 128
 4c0:	cb 01       	movw	r24, r22
 4c2:	01 97       	sbiw	r24, 0x01	; 1
 4c4:	9e 83       	std	Y+6, r25	; 0x06
 4c6:	8d 83       	std	Y+5, r24	; 0x05
 4c8:	a9 01       	movw	r20, r18
 4ca:	bf 01       	movw	r22, r30
 4cc:	ce 01       	movw	r24, r28
 4ce:	01 96       	adiw	r24, 0x01	; 1
 4d0:	19 d0       	rcall	.+50     	; 0x504 <vfprintf>
 4d2:	4d 81       	ldd	r20, Y+5	; 0x05
 4d4:	5e 81       	ldd	r21, Y+6	; 0x06
 4d6:	57 fd       	sbrc	r21, 7
 4d8:	0a c0       	rjmp	.+20     	; 0x4ee <vsnprintf+0x5a>
 4da:	2f 81       	ldd	r18, Y+7	; 0x07
 4dc:	38 85       	ldd	r19, Y+8	; 0x08
 4de:	42 17       	cp	r20, r18
 4e0:	53 07       	cpc	r21, r19
 4e2:	0c f4       	brge	.+2      	; 0x4e6 <vsnprintf+0x52>
 4e4:	9a 01       	movw	r18, r20
 4e6:	f8 01       	movw	r30, r16
 4e8:	e2 0f       	add	r30, r18
 4ea:	f3 1f       	adc	r31, r19
 4ec:	10 82       	st	Z, r1
 4ee:	2e 96       	adiw	r28, 0x0e	; 14
 4f0:	0f b6       	in	r0, 0x3f	; 63
 4f2:	f8 94       	cli
 4f4:	de bf       	out	0x3e, r29	; 62
 4f6:	0f be       	out	0x3f, r0	; 63
 4f8:	cd bf       	out	0x3d, r28	; 61
 4fa:	df 91       	pop	r29
 4fc:	cf 91       	pop	r28
 4fe:	1f 91       	pop	r17
 500:	0f 91       	pop	r16
 502:	08 95       	ret

00000504 <vfprintf>:
 504:	2f 92       	push	r2
 506:	3f 92       	push	r3
 508:	4f 92       	push	r4
 50a:	5f 92       	push	r5
 50c:	6f 92       	push	r6
 50e:	7f 92       	push	r7
 510:	8f 92       	push	r8
 512:	9f 92       	push	r9
 514:	af 92       	push	r10
 516:	bf 92       	push	r11
 518:	cf 92       	push	r12
 51a:	df 92       	push	r13
 51c:	ef 92       	push	r14
 51e:	ff 92       	push	r15
 520:	0f 93       	push	r16
 522:	1f 93       	push	r17
 524:	cf 93       	push	r28
 526:	df 93       	push	r29
 528:	cd b7       	in	r28, 0x3d	; 61
 52a:	de b7       	in	r29, 0x3e	; 62
 52c:	2b 97       	sbiw	r28, 0x0b	; 11
 52e:	0f b6       	in	r0, 0x3f	; 63
 530:	f8 94       	cli
 532:	de bf       	out	0x3e, r29	; 62
 534:	0f be       	out	0x3f, r0	; 63
 536:	cd bf       	out	0x3d, r28	; 61
 538:	6c 01       	movw	r12, r24
 53a:	7b 01       	movw	r14, r22
 53c:	8a 01       	movw	r16, r20
 53e:	fc 01       	movw	r30, r24
 540:	17 82       	std	Z+7, r1	; 0x07
 542:	16 82       	std	Z+6, r1	; 0x06
 544:	83 81       	ldd	r24, Z+3	; 0x03
 546:	81 ff       	sbrs	r24, 1
 548:	bf c1       	rjmp	.+894    	; 0x8c8 <vfprintf+0x3c4>
 54a:	ce 01       	movw	r24, r28
 54c:	01 96       	adiw	r24, 0x01	; 1
 54e:	3c 01       	movw	r6, r24
 550:	f6 01       	movw	r30, r12
 552:	93 81       	ldd	r25, Z+3	; 0x03
 554:	f7 01       	movw	r30, r14
 556:	93 fd       	sbrc	r25, 3
 558:	85 91       	lpm	r24, Z+
 55a:	93 ff       	sbrs	r25, 3
 55c:	81 91       	ld	r24, Z+
 55e:	7f 01       	movw	r14, r30
 560:	88 23       	and	r24, r24
 562:	09 f4       	brne	.+2      	; 0x566 <vfprintf+0x62>
 564:	ad c1       	rjmp	.+858    	; 0x8c0 <vfprintf+0x3bc>
 566:	85 32       	cpi	r24, 0x25	; 37
 568:	39 f4       	brne	.+14     	; 0x578 <vfprintf+0x74>
 56a:	93 fd       	sbrc	r25, 3
 56c:	85 91       	lpm	r24, Z+
 56e:	93 ff       	sbrs	r25, 3
 570:	81 91       	ld	r24, Z+
 572:	7f 01       	movw	r14, r30
 574:	85 32       	cpi	r24, 0x25	; 37
 576:	21 f4       	brne	.+8      	; 0x580 <vfprintf+0x7c>
 578:	b6 01       	movw	r22, r12
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	d6 d1       	rcall	.+940    	; 0x92a <fputc>
 57e:	e8 cf       	rjmp	.-48     	; 0x550 <vfprintf+0x4c>
 580:	91 2c       	mov	r9, r1
 582:	21 2c       	mov	r2, r1
 584:	31 2c       	mov	r3, r1
 586:	ff e1       	ldi	r31, 0x1F	; 31
 588:	f3 15       	cp	r31, r3
 58a:	d8 f0       	brcs	.+54     	; 0x5c2 <vfprintf+0xbe>
 58c:	8b 32       	cpi	r24, 0x2B	; 43
 58e:	79 f0       	breq	.+30     	; 0x5ae <vfprintf+0xaa>
 590:	38 f4       	brcc	.+14     	; 0x5a0 <vfprintf+0x9c>
 592:	80 32       	cpi	r24, 0x20	; 32
 594:	79 f0       	breq	.+30     	; 0x5b4 <vfprintf+0xb0>
 596:	83 32       	cpi	r24, 0x23	; 35
 598:	a1 f4       	brne	.+40     	; 0x5c2 <vfprintf+0xbe>
 59a:	23 2d       	mov	r18, r3
 59c:	20 61       	ori	r18, 0x10	; 16
 59e:	1d c0       	rjmp	.+58     	; 0x5da <vfprintf+0xd6>
 5a0:	8d 32       	cpi	r24, 0x2D	; 45
 5a2:	61 f0       	breq	.+24     	; 0x5bc <vfprintf+0xb8>
 5a4:	80 33       	cpi	r24, 0x30	; 48
 5a6:	69 f4       	brne	.+26     	; 0x5c2 <vfprintf+0xbe>
 5a8:	23 2d       	mov	r18, r3
 5aa:	21 60       	ori	r18, 0x01	; 1
 5ac:	16 c0       	rjmp	.+44     	; 0x5da <vfprintf+0xd6>
 5ae:	83 2d       	mov	r24, r3
 5b0:	82 60       	ori	r24, 0x02	; 2
 5b2:	38 2e       	mov	r3, r24
 5b4:	e3 2d       	mov	r30, r3
 5b6:	e4 60       	ori	r30, 0x04	; 4
 5b8:	3e 2e       	mov	r3, r30
 5ba:	2a c0       	rjmp	.+84     	; 0x610 <vfprintf+0x10c>
 5bc:	f3 2d       	mov	r31, r3
 5be:	f8 60       	ori	r31, 0x08	; 8
 5c0:	1d c0       	rjmp	.+58     	; 0x5fc <vfprintf+0xf8>
 5c2:	37 fc       	sbrc	r3, 7
 5c4:	2d c0       	rjmp	.+90     	; 0x620 <vfprintf+0x11c>
 5c6:	20 ed       	ldi	r18, 0xD0	; 208
 5c8:	28 0f       	add	r18, r24
 5ca:	2a 30       	cpi	r18, 0x0A	; 10
 5cc:	40 f0       	brcs	.+16     	; 0x5de <vfprintf+0xda>
 5ce:	8e 32       	cpi	r24, 0x2E	; 46
 5d0:	b9 f4       	brne	.+46     	; 0x600 <vfprintf+0xfc>
 5d2:	36 fc       	sbrc	r3, 6
 5d4:	75 c1       	rjmp	.+746    	; 0x8c0 <vfprintf+0x3bc>
 5d6:	23 2d       	mov	r18, r3
 5d8:	20 64       	ori	r18, 0x40	; 64
 5da:	32 2e       	mov	r3, r18
 5dc:	19 c0       	rjmp	.+50     	; 0x610 <vfprintf+0x10c>
 5de:	36 fe       	sbrs	r3, 6
 5e0:	06 c0       	rjmp	.+12     	; 0x5ee <vfprintf+0xea>
 5e2:	8a e0       	ldi	r24, 0x0A	; 10
 5e4:	98 9e       	mul	r9, r24
 5e6:	20 0d       	add	r18, r0
 5e8:	11 24       	eor	r1, r1
 5ea:	92 2e       	mov	r9, r18
 5ec:	11 c0       	rjmp	.+34     	; 0x610 <vfprintf+0x10c>
 5ee:	ea e0       	ldi	r30, 0x0A	; 10
 5f0:	2e 9e       	mul	r2, r30
 5f2:	20 0d       	add	r18, r0
 5f4:	11 24       	eor	r1, r1
 5f6:	22 2e       	mov	r2, r18
 5f8:	f3 2d       	mov	r31, r3
 5fa:	f0 62       	ori	r31, 0x20	; 32
 5fc:	3f 2e       	mov	r3, r31
 5fe:	08 c0       	rjmp	.+16     	; 0x610 <vfprintf+0x10c>
 600:	8c 36       	cpi	r24, 0x6C	; 108
 602:	21 f4       	brne	.+8      	; 0x60c <vfprintf+0x108>
 604:	83 2d       	mov	r24, r3
 606:	80 68       	ori	r24, 0x80	; 128
 608:	38 2e       	mov	r3, r24
 60a:	02 c0       	rjmp	.+4      	; 0x610 <vfprintf+0x10c>
 60c:	88 36       	cpi	r24, 0x68	; 104
 60e:	41 f4       	brne	.+16     	; 0x620 <vfprintf+0x11c>
 610:	f7 01       	movw	r30, r14
 612:	93 fd       	sbrc	r25, 3
 614:	85 91       	lpm	r24, Z+
 616:	93 ff       	sbrs	r25, 3
 618:	81 91       	ld	r24, Z+
 61a:	7f 01       	movw	r14, r30
 61c:	81 11       	cpse	r24, r1
 61e:	b3 cf       	rjmp	.-154    	; 0x586 <vfprintf+0x82>
 620:	98 2f       	mov	r25, r24
 622:	9f 7d       	andi	r25, 0xDF	; 223
 624:	95 54       	subi	r25, 0x45	; 69
 626:	93 30       	cpi	r25, 0x03	; 3
 628:	28 f4       	brcc	.+10     	; 0x634 <vfprintf+0x130>
 62a:	0c 5f       	subi	r16, 0xFC	; 252
 62c:	1f 4f       	sbci	r17, 0xFF	; 255
 62e:	9f e3       	ldi	r25, 0x3F	; 63
 630:	99 83       	std	Y+1, r25	; 0x01
 632:	0d c0       	rjmp	.+26     	; 0x64e <vfprintf+0x14a>
 634:	83 36       	cpi	r24, 0x63	; 99
 636:	31 f0       	breq	.+12     	; 0x644 <vfprintf+0x140>
 638:	83 37       	cpi	r24, 0x73	; 115
 63a:	71 f0       	breq	.+28     	; 0x658 <vfprintf+0x154>
 63c:	83 35       	cpi	r24, 0x53	; 83
 63e:	09 f0       	breq	.+2      	; 0x642 <vfprintf+0x13e>
 640:	55 c0       	rjmp	.+170    	; 0x6ec <vfprintf+0x1e8>
 642:	20 c0       	rjmp	.+64     	; 0x684 <vfprintf+0x180>
 644:	f8 01       	movw	r30, r16
 646:	80 81       	ld	r24, Z
 648:	89 83       	std	Y+1, r24	; 0x01
 64a:	0e 5f       	subi	r16, 0xFE	; 254
 64c:	1f 4f       	sbci	r17, 0xFF	; 255
 64e:	88 24       	eor	r8, r8
 650:	83 94       	inc	r8
 652:	91 2c       	mov	r9, r1
 654:	53 01       	movw	r10, r6
 656:	12 c0       	rjmp	.+36     	; 0x67c <vfprintf+0x178>
 658:	28 01       	movw	r4, r16
 65a:	f2 e0       	ldi	r31, 0x02	; 2
 65c:	4f 0e       	add	r4, r31
 65e:	51 1c       	adc	r5, r1
 660:	f8 01       	movw	r30, r16
 662:	a0 80       	ld	r10, Z
 664:	b1 80       	ldd	r11, Z+1	; 0x01
 666:	36 fe       	sbrs	r3, 6
 668:	03 c0       	rjmp	.+6      	; 0x670 <vfprintf+0x16c>
 66a:	69 2d       	mov	r22, r9
 66c:	70 e0       	ldi	r23, 0x00	; 0
 66e:	02 c0       	rjmp	.+4      	; 0x674 <vfprintf+0x170>
 670:	6f ef       	ldi	r22, 0xFF	; 255
 672:	7f ef       	ldi	r23, 0xFF	; 255
 674:	c5 01       	movw	r24, r10
 676:	4e d1       	rcall	.+668    	; 0x914 <strnlen>
 678:	4c 01       	movw	r8, r24
 67a:	82 01       	movw	r16, r4
 67c:	f3 2d       	mov	r31, r3
 67e:	ff 77       	andi	r31, 0x7F	; 127
 680:	3f 2e       	mov	r3, r31
 682:	15 c0       	rjmp	.+42     	; 0x6ae <vfprintf+0x1aa>
 684:	28 01       	movw	r4, r16
 686:	22 e0       	ldi	r18, 0x02	; 2
 688:	42 0e       	add	r4, r18
 68a:	51 1c       	adc	r5, r1
 68c:	f8 01       	movw	r30, r16
 68e:	a0 80       	ld	r10, Z
 690:	b1 80       	ldd	r11, Z+1	; 0x01
 692:	36 fe       	sbrs	r3, 6
 694:	03 c0       	rjmp	.+6      	; 0x69c <vfprintf+0x198>
 696:	69 2d       	mov	r22, r9
 698:	70 e0       	ldi	r23, 0x00	; 0
 69a:	02 c0       	rjmp	.+4      	; 0x6a0 <vfprintf+0x19c>
 69c:	6f ef       	ldi	r22, 0xFF	; 255
 69e:	7f ef       	ldi	r23, 0xFF	; 255
 6a0:	c5 01       	movw	r24, r10
 6a2:	2d d1       	rcall	.+602    	; 0x8fe <strnlen_P>
 6a4:	4c 01       	movw	r8, r24
 6a6:	f3 2d       	mov	r31, r3
 6a8:	f0 68       	ori	r31, 0x80	; 128
 6aa:	3f 2e       	mov	r3, r31
 6ac:	82 01       	movw	r16, r4
 6ae:	33 fc       	sbrc	r3, 3
 6b0:	19 c0       	rjmp	.+50     	; 0x6e4 <vfprintf+0x1e0>
 6b2:	82 2d       	mov	r24, r2
 6b4:	90 e0       	ldi	r25, 0x00	; 0
 6b6:	88 16       	cp	r8, r24
 6b8:	99 06       	cpc	r9, r25
 6ba:	a0 f4       	brcc	.+40     	; 0x6e4 <vfprintf+0x1e0>
 6bc:	b6 01       	movw	r22, r12
 6be:	80 e2       	ldi	r24, 0x20	; 32
 6c0:	90 e0       	ldi	r25, 0x00	; 0
 6c2:	33 d1       	rcall	.+614    	; 0x92a <fputc>
 6c4:	2a 94       	dec	r2
 6c6:	f5 cf       	rjmp	.-22     	; 0x6b2 <vfprintf+0x1ae>
 6c8:	f5 01       	movw	r30, r10
 6ca:	37 fc       	sbrc	r3, 7
 6cc:	85 91       	lpm	r24, Z+
 6ce:	37 fe       	sbrs	r3, 7
 6d0:	81 91       	ld	r24, Z+
 6d2:	5f 01       	movw	r10, r30
 6d4:	b6 01       	movw	r22, r12
 6d6:	90 e0       	ldi	r25, 0x00	; 0
 6d8:	28 d1       	rcall	.+592    	; 0x92a <fputc>
 6da:	21 10       	cpse	r2, r1
 6dc:	2a 94       	dec	r2
 6de:	21 e0       	ldi	r18, 0x01	; 1
 6e0:	82 1a       	sub	r8, r18
 6e2:	91 08       	sbc	r9, r1
 6e4:	81 14       	cp	r8, r1
 6e6:	91 04       	cpc	r9, r1
 6e8:	79 f7       	brne	.-34     	; 0x6c8 <vfprintf+0x1c4>
 6ea:	e1 c0       	rjmp	.+450    	; 0x8ae <vfprintf+0x3aa>
 6ec:	84 36       	cpi	r24, 0x64	; 100
 6ee:	11 f0       	breq	.+4      	; 0x6f4 <vfprintf+0x1f0>
 6f0:	89 36       	cpi	r24, 0x69	; 105
 6f2:	39 f5       	brne	.+78     	; 0x742 <vfprintf+0x23e>
 6f4:	f8 01       	movw	r30, r16
 6f6:	37 fe       	sbrs	r3, 7
 6f8:	07 c0       	rjmp	.+14     	; 0x708 <vfprintf+0x204>
 6fa:	60 81       	ld	r22, Z
 6fc:	71 81       	ldd	r23, Z+1	; 0x01
 6fe:	82 81       	ldd	r24, Z+2	; 0x02
 700:	93 81       	ldd	r25, Z+3	; 0x03
 702:	0c 5f       	subi	r16, 0xFC	; 252
 704:	1f 4f       	sbci	r17, 0xFF	; 255
 706:	08 c0       	rjmp	.+16     	; 0x718 <vfprintf+0x214>
 708:	60 81       	ld	r22, Z
 70a:	71 81       	ldd	r23, Z+1	; 0x01
 70c:	07 2e       	mov	r0, r23
 70e:	00 0c       	add	r0, r0
 710:	88 0b       	sbc	r24, r24
 712:	99 0b       	sbc	r25, r25
 714:	0e 5f       	subi	r16, 0xFE	; 254
 716:	1f 4f       	sbci	r17, 0xFF	; 255
 718:	f3 2d       	mov	r31, r3
 71a:	ff 76       	andi	r31, 0x6F	; 111
 71c:	3f 2e       	mov	r3, r31
 71e:	97 ff       	sbrs	r25, 7
 720:	09 c0       	rjmp	.+18     	; 0x734 <vfprintf+0x230>
 722:	90 95       	com	r25
 724:	80 95       	com	r24
 726:	70 95       	com	r23
 728:	61 95       	neg	r22
 72a:	7f 4f       	sbci	r23, 0xFF	; 255
 72c:	8f 4f       	sbci	r24, 0xFF	; 255
 72e:	9f 4f       	sbci	r25, 0xFF	; 255
 730:	f0 68       	ori	r31, 0x80	; 128
 732:	3f 2e       	mov	r3, r31
 734:	2a e0       	ldi	r18, 0x0A	; 10
 736:	30 e0       	ldi	r19, 0x00	; 0
 738:	a3 01       	movw	r20, r6
 73a:	33 d1       	rcall	.+614    	; 0x9a2 <__ultoa_invert>
 73c:	88 2e       	mov	r8, r24
 73e:	86 18       	sub	r8, r6
 740:	44 c0       	rjmp	.+136    	; 0x7ca <vfprintf+0x2c6>
 742:	85 37       	cpi	r24, 0x75	; 117
 744:	31 f4       	brne	.+12     	; 0x752 <vfprintf+0x24e>
 746:	23 2d       	mov	r18, r3
 748:	2f 7e       	andi	r18, 0xEF	; 239
 74a:	b2 2e       	mov	r11, r18
 74c:	2a e0       	ldi	r18, 0x0A	; 10
 74e:	30 e0       	ldi	r19, 0x00	; 0
 750:	25 c0       	rjmp	.+74     	; 0x79c <vfprintf+0x298>
 752:	93 2d       	mov	r25, r3
 754:	99 7f       	andi	r25, 0xF9	; 249
 756:	b9 2e       	mov	r11, r25
 758:	8f 36       	cpi	r24, 0x6F	; 111
 75a:	c1 f0       	breq	.+48     	; 0x78c <vfprintf+0x288>
 75c:	18 f4       	brcc	.+6      	; 0x764 <vfprintf+0x260>
 75e:	88 35       	cpi	r24, 0x58	; 88
 760:	79 f0       	breq	.+30     	; 0x780 <vfprintf+0x27c>
 762:	ae c0       	rjmp	.+348    	; 0x8c0 <vfprintf+0x3bc>
 764:	80 37       	cpi	r24, 0x70	; 112
 766:	19 f0       	breq	.+6      	; 0x76e <vfprintf+0x26a>
 768:	88 37       	cpi	r24, 0x78	; 120
 76a:	21 f0       	breq	.+8      	; 0x774 <vfprintf+0x270>
 76c:	a9 c0       	rjmp	.+338    	; 0x8c0 <vfprintf+0x3bc>
 76e:	e9 2f       	mov	r30, r25
 770:	e0 61       	ori	r30, 0x10	; 16
 772:	be 2e       	mov	r11, r30
 774:	b4 fe       	sbrs	r11, 4
 776:	0d c0       	rjmp	.+26     	; 0x792 <vfprintf+0x28e>
 778:	fb 2d       	mov	r31, r11
 77a:	f4 60       	ori	r31, 0x04	; 4
 77c:	bf 2e       	mov	r11, r31
 77e:	09 c0       	rjmp	.+18     	; 0x792 <vfprintf+0x28e>
 780:	34 fe       	sbrs	r3, 4
 782:	0a c0       	rjmp	.+20     	; 0x798 <vfprintf+0x294>
 784:	29 2f       	mov	r18, r25
 786:	26 60       	ori	r18, 0x06	; 6
 788:	b2 2e       	mov	r11, r18
 78a:	06 c0       	rjmp	.+12     	; 0x798 <vfprintf+0x294>
 78c:	28 e0       	ldi	r18, 0x08	; 8
 78e:	30 e0       	ldi	r19, 0x00	; 0
 790:	05 c0       	rjmp	.+10     	; 0x79c <vfprintf+0x298>
 792:	20 e1       	ldi	r18, 0x10	; 16
 794:	30 e0       	ldi	r19, 0x00	; 0
 796:	02 c0       	rjmp	.+4      	; 0x79c <vfprintf+0x298>
 798:	20 e1       	ldi	r18, 0x10	; 16
 79a:	32 e0       	ldi	r19, 0x02	; 2
 79c:	f8 01       	movw	r30, r16
 79e:	b7 fe       	sbrs	r11, 7
 7a0:	07 c0       	rjmp	.+14     	; 0x7b0 <vfprintf+0x2ac>
 7a2:	60 81       	ld	r22, Z
 7a4:	71 81       	ldd	r23, Z+1	; 0x01
 7a6:	82 81       	ldd	r24, Z+2	; 0x02
 7a8:	93 81       	ldd	r25, Z+3	; 0x03
 7aa:	0c 5f       	subi	r16, 0xFC	; 252
 7ac:	1f 4f       	sbci	r17, 0xFF	; 255
 7ae:	06 c0       	rjmp	.+12     	; 0x7bc <vfprintf+0x2b8>
 7b0:	60 81       	ld	r22, Z
 7b2:	71 81       	ldd	r23, Z+1	; 0x01
 7b4:	80 e0       	ldi	r24, 0x00	; 0
 7b6:	90 e0       	ldi	r25, 0x00	; 0
 7b8:	0e 5f       	subi	r16, 0xFE	; 254
 7ba:	1f 4f       	sbci	r17, 0xFF	; 255
 7bc:	a3 01       	movw	r20, r6
 7be:	f1 d0       	rcall	.+482    	; 0x9a2 <__ultoa_invert>
 7c0:	88 2e       	mov	r8, r24
 7c2:	86 18       	sub	r8, r6
 7c4:	fb 2d       	mov	r31, r11
 7c6:	ff 77       	andi	r31, 0x7F	; 127
 7c8:	3f 2e       	mov	r3, r31
 7ca:	36 fe       	sbrs	r3, 6
 7cc:	0d c0       	rjmp	.+26     	; 0x7e8 <vfprintf+0x2e4>
 7ce:	23 2d       	mov	r18, r3
 7d0:	2e 7f       	andi	r18, 0xFE	; 254
 7d2:	a2 2e       	mov	r10, r18
 7d4:	89 14       	cp	r8, r9
 7d6:	58 f4       	brcc	.+22     	; 0x7ee <vfprintf+0x2ea>
 7d8:	34 fe       	sbrs	r3, 4
 7da:	0b c0       	rjmp	.+22     	; 0x7f2 <vfprintf+0x2ee>
 7dc:	32 fc       	sbrc	r3, 2
 7de:	09 c0       	rjmp	.+18     	; 0x7f2 <vfprintf+0x2ee>
 7e0:	83 2d       	mov	r24, r3
 7e2:	8e 7e       	andi	r24, 0xEE	; 238
 7e4:	a8 2e       	mov	r10, r24
 7e6:	05 c0       	rjmp	.+10     	; 0x7f2 <vfprintf+0x2ee>
 7e8:	b8 2c       	mov	r11, r8
 7ea:	a3 2c       	mov	r10, r3
 7ec:	03 c0       	rjmp	.+6      	; 0x7f4 <vfprintf+0x2f0>
 7ee:	b8 2c       	mov	r11, r8
 7f0:	01 c0       	rjmp	.+2      	; 0x7f4 <vfprintf+0x2f0>
 7f2:	b9 2c       	mov	r11, r9
 7f4:	a4 fe       	sbrs	r10, 4
 7f6:	0f c0       	rjmp	.+30     	; 0x816 <vfprintf+0x312>
 7f8:	fe 01       	movw	r30, r28
 7fa:	e8 0d       	add	r30, r8
 7fc:	f1 1d       	adc	r31, r1
 7fe:	80 81       	ld	r24, Z
 800:	80 33       	cpi	r24, 0x30	; 48
 802:	21 f4       	brne	.+8      	; 0x80c <vfprintf+0x308>
 804:	9a 2d       	mov	r25, r10
 806:	99 7e       	andi	r25, 0xE9	; 233
 808:	a9 2e       	mov	r10, r25
 80a:	09 c0       	rjmp	.+18     	; 0x81e <vfprintf+0x31a>
 80c:	a2 fe       	sbrs	r10, 2
 80e:	06 c0       	rjmp	.+12     	; 0x81c <vfprintf+0x318>
 810:	b3 94       	inc	r11
 812:	b3 94       	inc	r11
 814:	04 c0       	rjmp	.+8      	; 0x81e <vfprintf+0x31a>
 816:	8a 2d       	mov	r24, r10
 818:	86 78       	andi	r24, 0x86	; 134
 81a:	09 f0       	breq	.+2      	; 0x81e <vfprintf+0x31a>
 81c:	b3 94       	inc	r11
 81e:	a3 fc       	sbrc	r10, 3
 820:	10 c0       	rjmp	.+32     	; 0x842 <vfprintf+0x33e>
 822:	a0 fe       	sbrs	r10, 0
 824:	06 c0       	rjmp	.+12     	; 0x832 <vfprintf+0x32e>
 826:	b2 14       	cp	r11, r2
 828:	80 f4       	brcc	.+32     	; 0x84a <vfprintf+0x346>
 82a:	28 0c       	add	r2, r8
 82c:	92 2c       	mov	r9, r2
 82e:	9b 18       	sub	r9, r11
 830:	0d c0       	rjmp	.+26     	; 0x84c <vfprintf+0x348>
 832:	b2 14       	cp	r11, r2
 834:	58 f4       	brcc	.+22     	; 0x84c <vfprintf+0x348>
 836:	b6 01       	movw	r22, r12
 838:	80 e2       	ldi	r24, 0x20	; 32
 83a:	90 e0       	ldi	r25, 0x00	; 0
 83c:	76 d0       	rcall	.+236    	; 0x92a <fputc>
 83e:	b3 94       	inc	r11
 840:	f8 cf       	rjmp	.-16     	; 0x832 <vfprintf+0x32e>
 842:	b2 14       	cp	r11, r2
 844:	18 f4       	brcc	.+6      	; 0x84c <vfprintf+0x348>
 846:	2b 18       	sub	r2, r11
 848:	02 c0       	rjmp	.+4      	; 0x84e <vfprintf+0x34a>
 84a:	98 2c       	mov	r9, r8
 84c:	21 2c       	mov	r2, r1
 84e:	a4 fe       	sbrs	r10, 4
 850:	0f c0       	rjmp	.+30     	; 0x870 <vfprintf+0x36c>
 852:	b6 01       	movw	r22, r12
 854:	80 e3       	ldi	r24, 0x30	; 48
 856:	90 e0       	ldi	r25, 0x00	; 0
 858:	68 d0       	rcall	.+208    	; 0x92a <fputc>
 85a:	a2 fe       	sbrs	r10, 2
 85c:	16 c0       	rjmp	.+44     	; 0x88a <vfprintf+0x386>
 85e:	a1 fc       	sbrc	r10, 1
 860:	03 c0       	rjmp	.+6      	; 0x868 <vfprintf+0x364>
 862:	88 e7       	ldi	r24, 0x78	; 120
 864:	90 e0       	ldi	r25, 0x00	; 0
 866:	02 c0       	rjmp	.+4      	; 0x86c <vfprintf+0x368>
 868:	88 e5       	ldi	r24, 0x58	; 88
 86a:	90 e0       	ldi	r25, 0x00	; 0
 86c:	b6 01       	movw	r22, r12
 86e:	0c c0       	rjmp	.+24     	; 0x888 <vfprintf+0x384>
 870:	8a 2d       	mov	r24, r10
 872:	86 78       	andi	r24, 0x86	; 134
 874:	51 f0       	breq	.+20     	; 0x88a <vfprintf+0x386>
 876:	a1 fe       	sbrs	r10, 1
 878:	02 c0       	rjmp	.+4      	; 0x87e <vfprintf+0x37a>
 87a:	8b e2       	ldi	r24, 0x2B	; 43
 87c:	01 c0       	rjmp	.+2      	; 0x880 <vfprintf+0x37c>
 87e:	80 e2       	ldi	r24, 0x20	; 32
 880:	a7 fc       	sbrc	r10, 7
 882:	8d e2       	ldi	r24, 0x2D	; 45
 884:	b6 01       	movw	r22, r12
 886:	90 e0       	ldi	r25, 0x00	; 0
 888:	50 d0       	rcall	.+160    	; 0x92a <fputc>
 88a:	89 14       	cp	r8, r9
 88c:	30 f4       	brcc	.+12     	; 0x89a <vfprintf+0x396>
 88e:	b6 01       	movw	r22, r12
 890:	80 e3       	ldi	r24, 0x30	; 48
 892:	90 e0       	ldi	r25, 0x00	; 0
 894:	4a d0       	rcall	.+148    	; 0x92a <fputc>
 896:	9a 94       	dec	r9
 898:	f8 cf       	rjmp	.-16     	; 0x88a <vfprintf+0x386>
 89a:	8a 94       	dec	r8
 89c:	f3 01       	movw	r30, r6
 89e:	e8 0d       	add	r30, r8
 8a0:	f1 1d       	adc	r31, r1
 8a2:	80 81       	ld	r24, Z
 8a4:	b6 01       	movw	r22, r12
 8a6:	90 e0       	ldi	r25, 0x00	; 0
 8a8:	40 d0       	rcall	.+128    	; 0x92a <fputc>
 8aa:	81 10       	cpse	r8, r1
 8ac:	f6 cf       	rjmp	.-20     	; 0x89a <vfprintf+0x396>
 8ae:	22 20       	and	r2, r2
 8b0:	09 f4       	brne	.+2      	; 0x8b4 <vfprintf+0x3b0>
 8b2:	4e ce       	rjmp	.-868    	; 0x550 <vfprintf+0x4c>
 8b4:	b6 01       	movw	r22, r12
 8b6:	80 e2       	ldi	r24, 0x20	; 32
 8b8:	90 e0       	ldi	r25, 0x00	; 0
 8ba:	37 d0       	rcall	.+110    	; 0x92a <fputc>
 8bc:	2a 94       	dec	r2
 8be:	f7 cf       	rjmp	.-18     	; 0x8ae <vfprintf+0x3aa>
 8c0:	f6 01       	movw	r30, r12
 8c2:	86 81       	ldd	r24, Z+6	; 0x06
 8c4:	97 81       	ldd	r25, Z+7	; 0x07
 8c6:	02 c0       	rjmp	.+4      	; 0x8cc <vfprintf+0x3c8>
 8c8:	8f ef       	ldi	r24, 0xFF	; 255
 8ca:	9f ef       	ldi	r25, 0xFF	; 255
 8cc:	2b 96       	adiw	r28, 0x0b	; 11
 8ce:	0f b6       	in	r0, 0x3f	; 63
 8d0:	f8 94       	cli
 8d2:	de bf       	out	0x3e, r29	; 62
 8d4:	0f be       	out	0x3f, r0	; 63
 8d6:	cd bf       	out	0x3d, r28	; 61
 8d8:	df 91       	pop	r29
 8da:	cf 91       	pop	r28
 8dc:	1f 91       	pop	r17
 8de:	0f 91       	pop	r16
 8e0:	ff 90       	pop	r15
 8e2:	ef 90       	pop	r14
 8e4:	df 90       	pop	r13
 8e6:	cf 90       	pop	r12
 8e8:	bf 90       	pop	r11
 8ea:	af 90       	pop	r10
 8ec:	9f 90       	pop	r9
 8ee:	8f 90       	pop	r8
 8f0:	7f 90       	pop	r7
 8f2:	6f 90       	pop	r6
 8f4:	5f 90       	pop	r5
 8f6:	4f 90       	pop	r4
 8f8:	3f 90       	pop	r3
 8fa:	2f 90       	pop	r2
 8fc:	08 95       	ret

000008fe <strnlen_P>:
 8fe:	fc 01       	movw	r30, r24
 900:	05 90       	lpm	r0, Z+
 902:	61 50       	subi	r22, 0x01	; 1
 904:	70 40       	sbci	r23, 0x00	; 0
 906:	01 10       	cpse	r0, r1
 908:	d8 f7       	brcc	.-10     	; 0x900 <strnlen_P+0x2>
 90a:	80 95       	com	r24
 90c:	90 95       	com	r25
 90e:	8e 0f       	add	r24, r30
 910:	9f 1f       	adc	r25, r31
 912:	08 95       	ret

00000914 <strnlen>:
 914:	fc 01       	movw	r30, r24
 916:	61 50       	subi	r22, 0x01	; 1
 918:	70 40       	sbci	r23, 0x00	; 0
 91a:	01 90       	ld	r0, Z+
 91c:	01 10       	cpse	r0, r1
 91e:	d8 f7       	brcc	.-10     	; 0x916 <strnlen+0x2>
 920:	80 95       	com	r24
 922:	90 95       	com	r25
 924:	8e 0f       	add	r24, r30
 926:	9f 1f       	adc	r25, r31
 928:	08 95       	ret

0000092a <fputc>:
 92a:	0f 93       	push	r16
 92c:	1f 93       	push	r17
 92e:	cf 93       	push	r28
 930:	df 93       	push	r29
 932:	fb 01       	movw	r30, r22
 934:	23 81       	ldd	r18, Z+3	; 0x03
 936:	21 fd       	sbrc	r18, 1
 938:	03 c0       	rjmp	.+6      	; 0x940 <fputc+0x16>
 93a:	8f ef       	ldi	r24, 0xFF	; 255
 93c:	9f ef       	ldi	r25, 0xFF	; 255
 93e:	2c c0       	rjmp	.+88     	; 0x998 <fputc+0x6e>
 940:	22 ff       	sbrs	r18, 2
 942:	16 c0       	rjmp	.+44     	; 0x970 <fputc+0x46>
 944:	46 81       	ldd	r20, Z+6	; 0x06
 946:	57 81       	ldd	r21, Z+7	; 0x07
 948:	24 81       	ldd	r18, Z+4	; 0x04
 94a:	35 81       	ldd	r19, Z+5	; 0x05
 94c:	42 17       	cp	r20, r18
 94e:	53 07       	cpc	r21, r19
 950:	44 f4       	brge	.+16     	; 0x962 <fputc+0x38>
 952:	a0 81       	ld	r26, Z
 954:	b1 81       	ldd	r27, Z+1	; 0x01
 956:	9d 01       	movw	r18, r26
 958:	2f 5f       	subi	r18, 0xFF	; 255
 95a:	3f 4f       	sbci	r19, 0xFF	; 255
 95c:	31 83       	std	Z+1, r19	; 0x01
 95e:	20 83       	st	Z, r18
 960:	8c 93       	st	X, r24
 962:	26 81       	ldd	r18, Z+6	; 0x06
 964:	37 81       	ldd	r19, Z+7	; 0x07
 966:	2f 5f       	subi	r18, 0xFF	; 255
 968:	3f 4f       	sbci	r19, 0xFF	; 255
 96a:	37 83       	std	Z+7, r19	; 0x07
 96c:	26 83       	std	Z+6, r18	; 0x06
 96e:	14 c0       	rjmp	.+40     	; 0x998 <fputc+0x6e>
 970:	8b 01       	movw	r16, r22
 972:	ec 01       	movw	r28, r24
 974:	fb 01       	movw	r30, r22
 976:	00 84       	ldd	r0, Z+8	; 0x08
 978:	f1 85       	ldd	r31, Z+9	; 0x09
 97a:	e0 2d       	mov	r30, r0
 97c:	09 95       	icall
 97e:	89 2b       	or	r24, r25
 980:	e1 f6       	brne	.-72     	; 0x93a <fputc+0x10>
 982:	d8 01       	movw	r26, r16
 984:	16 96       	adiw	r26, 0x06	; 6
 986:	8d 91       	ld	r24, X+
 988:	9c 91       	ld	r25, X
 98a:	17 97       	sbiw	r26, 0x07	; 7
 98c:	01 96       	adiw	r24, 0x01	; 1
 98e:	17 96       	adiw	r26, 0x07	; 7
 990:	9c 93       	st	X, r25
 992:	8e 93       	st	-X, r24
 994:	16 97       	sbiw	r26, 0x06	; 6
 996:	ce 01       	movw	r24, r28
 998:	df 91       	pop	r29
 99a:	cf 91       	pop	r28
 99c:	1f 91       	pop	r17
 99e:	0f 91       	pop	r16
 9a0:	08 95       	ret

000009a2 <__ultoa_invert>:
 9a2:	fa 01       	movw	r30, r20
 9a4:	aa 27       	eor	r26, r26
 9a6:	28 30       	cpi	r18, 0x08	; 8
 9a8:	51 f1       	breq	.+84     	; 0x9fe <__ultoa_invert+0x5c>
 9aa:	20 31       	cpi	r18, 0x10	; 16
 9ac:	81 f1       	breq	.+96     	; 0xa0e <__ultoa_invert+0x6c>
 9ae:	e8 94       	clt
 9b0:	6f 93       	push	r22
 9b2:	6e 7f       	andi	r22, 0xFE	; 254
 9b4:	6e 5f       	subi	r22, 0xFE	; 254
 9b6:	7f 4f       	sbci	r23, 0xFF	; 255
 9b8:	8f 4f       	sbci	r24, 0xFF	; 255
 9ba:	9f 4f       	sbci	r25, 0xFF	; 255
 9bc:	af 4f       	sbci	r26, 0xFF	; 255
 9be:	b1 e0       	ldi	r27, 0x01	; 1
 9c0:	3e d0       	rcall	.+124    	; 0xa3e <__ultoa_invert+0x9c>
 9c2:	b4 e0       	ldi	r27, 0x04	; 4
 9c4:	3c d0       	rcall	.+120    	; 0xa3e <__ultoa_invert+0x9c>
 9c6:	67 0f       	add	r22, r23
 9c8:	78 1f       	adc	r23, r24
 9ca:	89 1f       	adc	r24, r25
 9cc:	9a 1f       	adc	r25, r26
 9ce:	a1 1d       	adc	r26, r1
 9d0:	68 0f       	add	r22, r24
 9d2:	79 1f       	adc	r23, r25
 9d4:	8a 1f       	adc	r24, r26
 9d6:	91 1d       	adc	r25, r1
 9d8:	a1 1d       	adc	r26, r1
 9da:	6a 0f       	add	r22, r26
 9dc:	71 1d       	adc	r23, r1
 9de:	81 1d       	adc	r24, r1
 9e0:	91 1d       	adc	r25, r1
 9e2:	a1 1d       	adc	r26, r1
 9e4:	20 d0       	rcall	.+64     	; 0xa26 <__ultoa_invert+0x84>
 9e6:	09 f4       	brne	.+2      	; 0x9ea <__ultoa_invert+0x48>
 9e8:	68 94       	set
 9ea:	3f 91       	pop	r19
 9ec:	2a e0       	ldi	r18, 0x0A	; 10
 9ee:	26 9f       	mul	r18, r22
 9f0:	11 24       	eor	r1, r1
 9f2:	30 19       	sub	r19, r0
 9f4:	30 5d       	subi	r19, 0xD0	; 208
 9f6:	31 93       	st	Z+, r19
 9f8:	de f6       	brtc	.-74     	; 0x9b0 <__ultoa_invert+0xe>
 9fa:	cf 01       	movw	r24, r30
 9fc:	08 95       	ret
 9fe:	46 2f       	mov	r20, r22
 a00:	47 70       	andi	r20, 0x07	; 7
 a02:	40 5d       	subi	r20, 0xD0	; 208
 a04:	41 93       	st	Z+, r20
 a06:	b3 e0       	ldi	r27, 0x03	; 3
 a08:	0f d0       	rcall	.+30     	; 0xa28 <__ultoa_invert+0x86>
 a0a:	c9 f7       	brne	.-14     	; 0x9fe <__ultoa_invert+0x5c>
 a0c:	f6 cf       	rjmp	.-20     	; 0x9fa <__ultoa_invert+0x58>
 a0e:	46 2f       	mov	r20, r22
 a10:	4f 70       	andi	r20, 0x0F	; 15
 a12:	40 5d       	subi	r20, 0xD0	; 208
 a14:	4a 33       	cpi	r20, 0x3A	; 58
 a16:	18 f0       	brcs	.+6      	; 0xa1e <__ultoa_invert+0x7c>
 a18:	49 5d       	subi	r20, 0xD9	; 217
 a1a:	31 fd       	sbrc	r19, 1
 a1c:	40 52       	subi	r20, 0x20	; 32
 a1e:	41 93       	st	Z+, r20
 a20:	02 d0       	rcall	.+4      	; 0xa26 <__ultoa_invert+0x84>
 a22:	a9 f7       	brne	.-22     	; 0xa0e <__ultoa_invert+0x6c>
 a24:	ea cf       	rjmp	.-44     	; 0x9fa <__ultoa_invert+0x58>
 a26:	b4 e0       	ldi	r27, 0x04	; 4
 a28:	a6 95       	lsr	r26
 a2a:	97 95       	ror	r25
 a2c:	87 95       	ror	r24
 a2e:	77 95       	ror	r23
 a30:	67 95       	ror	r22
 a32:	ba 95       	dec	r27
 a34:	c9 f7       	brne	.-14     	; 0xa28 <__ultoa_invert+0x86>
 a36:	00 97       	sbiw	r24, 0x00	; 0
 a38:	61 05       	cpc	r22, r1
 a3a:	71 05       	cpc	r23, r1
 a3c:	08 95       	ret
 a3e:	9b 01       	movw	r18, r22
 a40:	ac 01       	movw	r20, r24
 a42:	0a 2e       	mov	r0, r26
 a44:	06 94       	lsr	r0
 a46:	57 95       	ror	r21
 a48:	47 95       	ror	r20
 a4a:	37 95       	ror	r19
 a4c:	27 95       	ror	r18
 a4e:	ba 95       	dec	r27
 a50:	c9 f7       	brne	.-14     	; 0xa44 <__ultoa_invert+0xa2>
 a52:	62 0f       	add	r22, r18
 a54:	73 1f       	adc	r23, r19
 a56:	84 1f       	adc	r24, r20
 a58:	95 1f       	adc	r25, r21
 a5a:	a0 1d       	adc	r26, r0
 a5c:	08 95       	ret

00000a5e <_exit>:
 a5e:	f8 94       	cli

00000a60 <__stop_program>:
 a60:	ff cf       	rjmp	.-2      	; 0xa60 <__stop_program>
